/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.pas.usermanager.struts.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.pas.usermanager.domain.User;
import com.pas.usermanager.service.UserService;
import com.pas.usermanager.struts.form.UserForm;

/**
 * MyEclipse Struts Creation date: 10-15-2013
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/userCTL" name="userForm" scope="request"
 */
public class UserCTLAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String type = request.getParameter("type");
		if (type == null) {
			request.setAttribute("err", "参数出错，为空");
			return mapping.findForward("err");
		}

		UserForm userForm = (UserForm) form;
		UserService us = new UserService();
		if ("add".equals(type)) {
			String addInfo = addUser(request, userForm, us);
			if (addInfo.equals("ok")) {
				request.setAttribute("okinfo", "添加用户");
				return mapping.findForward("ok");
			} else {
				request.setAttribute("err", addInfo);
				return mapping.findForward("err");
			}
		} else if ("showusers".equals(type)) {
			showUsers(request, response);
			return mapping.findForward("showusers");
		} else if ("del".equals(type)) {
			String delInfo = delUser(request.getParameter("id").toString(), us);
			if (delInfo.equals("ok")) {
				request.setAttribute("okinfo", "删除用户");
				return mapping.findForward("ok");
			} else {
				request.setAttribute("err", delInfo);
				return mapping.findForward("err");
			}
		} else if ("update".equals(type)) {
			String userid=request.getParameter("id").toString();
			if("".equals(userid))
			{
				request.setAttribute("err", "参数错误");
				return mapping.findForward("err");
			}
			User user = us.getUserModel(userid);
			request.setAttribute("UserUpdate", user);
			return mapping.findForward("updateuser");
		} else if ("modify".equals(type)) {
			String modiftInfo = modifyUser(request, userForm, us);
			if (modiftInfo.equals("ok")) {
				request.setAttribute("okinfo", "更新用户");
				return mapping.findForward("ok");
			} else {
				request.setAttribute("err", modiftInfo);
				return mapping.findForward("err");
			}
		}
		request.setAttribute("err", "非法操作");
		return mapping.findForward("err");
	}

	/*
	 * 删除用户
	 */
	private String delUser(String userid, UserService us) {
		if ("".equals(userid)) {
			return "参数为空";
		} else {
			if (us.delUser(userid)) {
				return "ok";
			} else {

				return "删除错误";
			}
		}
	}

	/*
	 * 修改用户信息
	 */
	private String modifyUser(HttpServletRequest request, UserForm uf,
			UserService us) {
		// 修改用户
		User user = getUser(request, uf);
		if(user==null)
		{
			return "修改出错";
		}
		if (us.updateUser(user)) {
			return "ok";
		}
		return "修改出错";
	}

	/*
	 * 得到用户实体
	 */
	private User getUser(HttpServletRequest request, UserForm userform) {
		String userId = String.valueOf(userform.getId());
		String username = userform.getName();
		String email = userform.getEmail();
		String grade = String.valueOf(userform.getGrade());
		String pwd = userform.getPwd();
		if ("".equals(username) || "".equals(email) || "".equals(grade)
				|| "".equals(pwd)) {
			return null;
		}

		User user = new User();

		if (null != userId) {
			user.setId(Integer.parseInt(userId));
		}
		user.setName(username);
		user.setEmail(email);
		user.setGrade(Integer.parseInt(grade));
		user.setPwd(pwd);
		return user;
	}

	/*
	 * 添加用户
	 */
	private String addUser(HttpServletRequest request, UserForm userform,
			UserService us) {

		User user = getUser(request, userform);
		if(user==null)
		{
			return "添加出错";
		}
		if (us.addUser(user)) {
			return "ok";
		}
		return "添加出错";
	}

	private void showUsers(HttpServletRequest request,
			HttpServletResponse response) {
		// 接收参数
		response.setCharacterEncoding("gb2312");
		String S_pageNow = request.getParameter("pageNow");
		String S_pageStartIndex = request.getParameter("pageStartIndex");
		if (null == S_pageNow) {
			S_pageNow = "1";
		}

		int pageNow = 1;
		try {
			pageNow = (int) Double.parseDouble(S_pageNow);
		} catch (Exception e) {
			pageNow = 1;
			try {
				response.getWriter()
						.println(
								"<script type='text/javascript'>window.alert('参数错误');window.close()</script>");
			} catch (IOException e1) {
				e1.printStackTrace();
			}
			return;
		}

		int pageStartIndex = 1;

		// 计算参数
		UserService us = new UserService();

		int pageCount = us.getUserPageCount(10);

		if (pageNow < 1 || pageNow > pageCount) {
			pageNow = 1;
		}

		if (S_pageStartIndex != null) {
			pageStartIndex = Integer.parseInt(S_pageStartIndex);

			if (pageStartIndex < 1 || pageStartIndex > pageCount) {
				pageStartIndex = 1;
			}
		} else {
			pageStartIndex = (pageNow - 10 > 0 ? pageNow - 9 : 1);
		}

		// 准备数据 调用Service准备数据
		int pageSize = 10;
		ArrayList<User> users = us.getUsersByPage(pageNow, pageSize);

		// 给之后的jsp使用
		request.setAttribute("pageusers", users);
		request.setAttribute("pagecount", pageCount);
		request.setAttribute("pageNow", pageNow);
		request.setAttribute("pageStartIndex", pageStartIndex);
	}
}