package com.pas.matrixutil;

import Jama.Matrix;
import Jama.SingularValueDecomposition;

public class MySVD extends SingularValueDecomposition {

	public MySVD(Matrix Arg) {
		super(Arg);
	}

	@Override
	public Matrix getS() {
		int m = this.getU().getRowDimension();
		int n = this.getV().getRowDimension();
		int max = Math.max(m, n);
		double s[] = this.getSingularValues();
		
		//S为n*m矩阵
		Matrix X = new Matrix(n, m);
		double[][] S = X.getArray();
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				S[i][j] = 0.0;
			}
			if (i < min) {
				S[i][i] = s[i];
			} else {
				S[i][i] = 0;
			}
		}
		return X;
	}
}
